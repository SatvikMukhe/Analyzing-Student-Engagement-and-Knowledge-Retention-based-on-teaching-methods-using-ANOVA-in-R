---
title: "Code_Description"
author: "Akshat Veerwal"
format: docx
editor: visual
---

# Data Preprocessing

Load data and libraries

```{r}
library(dplyr)
library(readxl)
library(writexl)
library(ggplot2)
data <- read_xlsx("response_data.xlsx")
summary(data)
```

Selecting columns required for ANOVA testing.

```{r}
selected_data <-  data |> select(4,9,10,3,18,19,20)
selected_data
```

Checking for null values.

```{r}
sum(is.na(data))
```

Renaming columns.

```{r}
selected_data <- selected_data |> rename("First Year or Not?"="Which year of study are you currently in?","Prior_knowledge"="Do you have any prior knowledge about Machine Learning?","Retention_Score"="Score")
selected_data
selected_data$Engaging_Score <- rowMeans(selected_data[, c(5,6,7)], na.rm = TRUE)
View(selected_data)
```

Converting Categorical values to Numerical Values.

```{r}
selected_data <- selected_data %>%
  mutate(`First Year or Not?` = if_else(`First Year or Not?` == "1st year", 1, 0))
selected_data <- selected_data %>%
  mutate(`Prior_knowledge` = if_else(`Prior_knowledge` == "Yes", 1, 0))
selected_data <- selected_data |> select(1:4,8)
selected_data <- selected_data |> mutate(`Engaging/Dull`=if_else(row_number()>=1 & row_number()<=132,1,0))
View(selected_data)
```

Reordering the columns in Meaningful order.

```{r}
final_data <- selected_data |> select(1,6,3,2,4,5)
View(final_data)
```

Exporting the final data into an Excel file.

```{r}
#write_xlsx(final_data, "Cleaned_Data.xlsx")
```

# Running ANOVA Tests

Doing the tests for both dependent variables.

```{r}
final_data <- read_xlsx("Cleaned_Data.xlsx")
anova_result <- aov(`Retention_Score` ~ `Engaging/Dull` * `Prior_knowledge` * `First Year or Not?`,data = final_data)
coefficients(anova_result)
anova2_result <- aov(`Engaging_Score` ~ `Engaging/Dull` * `Prior_knowledge` * `First Year or Not?`,data = final_data)
coefficients(anova_result)

```

# Visualizations

Displaying the distribution for engaging score.

```{r}
ggplot(final_data, aes(x = Engaging_Score)) +
  geom_histogram(binwidth = 1, fill = "forestgreen", color = "black", alpha = 0.8) +
  theme_minimal() +
  labs(
    title = "Distribution of Engaging Score",
    x = "Engaging Score",
    y = "Number of Students"
  )
```

Displaying the distribution for retention score.

```{r}
ggplot(final_data, aes(x = Retention_Score)) +
  geom_histogram(binwidth = 1, fill = "steelblue", color = "black", alpha = 0.8) +
  theme_minimal() +
  labs(
    title = "Distribution of Retention Score",
    x = "Retention Score",
    y = "Number of Students"
  )
```

Distribution of Student Engagement scores by teaching method

```{r}
ggplot(final_data, aes(x = `Engaging/Dull`, y = Engaging_Score, fill = factor(`Engaging/Dull`))) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Student Engagement Score by Teaching Method", 
       x = "Engaging/Dull", 
       y = "Mean Student Engaging Score",
       fill = "Type of Video") + # Custom legend title
  scale_fill_manual(values = c("0" = "orange", "1" = "black"), # Customize colors
                    labels = c("0" = "Dull", "1" = "Engaging")) +
  theme_minimal()
```

Boxplot for Engaging/Dull and Prior_knowledge interaction

```{r}
ggplot(final_data, aes(x = Prior_knowledge, y = `Engaging_Score`, fill = factor(`Engaging/Dull`))) +
  geom_boxplot() +
  labs(
    title = "Student Engagement Score by Prior Knowledge and Teaching Method", 
    x = "Prior Knowledge", 
    y = "Student Engagement Score",
    fill = "Teaching Method" # Custom legend title
  ) +
  scale_fill_manual(
    values = c("0" = "#FFC0CB", "1" = "#FF1599"), # Customize colors
    labels = c("0" = "Dull", "1" = "Engaging") # Custom labels
  ) +
  facet_wrap(~ `Engaging/Dull`) +
  theme_minimal()

```

Distribution of Retention Test scores by Teaching Method

```{r}
ggplot(final_data, aes(x = `Engaging/Dull`, y = Retention_Score, fill = factor(`Engaging/Dull`))) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Retention Test Score by Teaching Method", 
       x = "Engaging/Dull", 
       y = "Mean Retention Test Score",
  fill = "Teaching Method") + # Custom legend title
  scale_fill_manual(values = c("0" = "darkred", "1" = "yellow"), # Customize colors
                    labels = c("0" = "Dull", "1" = "Engaging")) +
  theme_minimal()
```

Distribution of Retention Test scores by Prior Knowledge

```{r}
ggplot(final_data, aes(x = factor(Prior_knowledge), y = Retention_Score, fill = factor(Prior_knowledge))) +
  geom_bar(stat = "summary", fun = "mean") +
  labs(title = "Retention Test Score by Prior Knowledge", 
       x = "Prior Knowledge", 
       y = "Mean Retention Test Score",
       fill = "Prior Knowledge") + # Custom legend title
  scale_fill_manual(values = c("0" = "red", "1" = "blue"), # Customize colors
                    labels = c("0" = "No Prior Knowledge", "1" = "Has Prior Knowledge")) +
  theme_minimal()
```

Distribution of Retention Test scores by Year of Study

```{r}
ggplot(final_data, aes(x = factor(`First Year or Not?`), y = Retention_Score, fill = factor(`First Year or Not?`))) +
    geom_bar(stat = "summary", fun = "mean") +
    labs(title = "Retention Test Score by Student's Year of Study", 
         x = "First Year or Senior?", 
         y = "Mean Retention Test Score",
         fill = "Year of Study") + # Update legend title
    scale_fill_manual(values = c("0" = "blue", "1" = "green"), # Customize colors if needed
                      labels = c("0" = "Not First Year", "1" = "First Year")) +
    theme_minimal()
```
